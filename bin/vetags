#!/bin/sh

#
#
# No Description
#
#

VERSION=0.3
VERSION_NAME="Virtual Environment Ctags $VERSION"

# enable develop mode
if [ "$DEVELOPMENT" = "yes" ]; then
    PATH=$PATH
fi

# enable debug mode
if [ "$DEBUG" = "yes" ]; then
    set -x
fi

BIN=$(cd $(dirname $0);pwd)
LIB=$BIN/../lib/vetags/lang

export VETAGS_DIR=$LIB

usage() {
    _langlist=`/bin/ls $LIB`; langlist=`echo $_langlist`
    echo "$VERSION_NAME"
    echo ""
    echo "usage: vetags [${langlist}] [path]"
    echo
    echo "Available subcommands are:"
    echo "   python  Create for your tags."
    echo "   ruby    Create for your tags."
    echo "   scala   Create for your tags."
    echo "   c       Create for your tags."
    echo "   cc|cpp  Create for your tags."
    echo "   php     Create for your tags."
    echo "   haskell Create for your tags."
    echo "   version Shows version information."
    echo
    echo "Available options are:"
    echo "   -h, --help            show this help message and exit."
    echo "   -v, --version         show program's version number and exit  "
    echo "   -a, --all             all in virtualenv packages. ignore all options.   "
    echo "   -p PACKAGES [PACKAGES ...], --packages PACKAGES [PACKAGES ...]  give packages name. default is a ''any'' package. "
    echo "   -s STANDARD_PACKAGES [STANDARD_PACKAGES ...], --standard-packages STANDARD_PACKAGES [STANDARD_PACKAGES ...]  "
    echo "   -e --etags            generate ETAGS file (etags)."
    echo "   -c --ctags            generate CTAGS file (ctags)."
    echo "   --no-ve               not include the virtualenv.  "
    echo "   --allow-testcode      include the test code."
}


# while test $# -ne 0; do

    # option=$1
    # case "$1" in
    # -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    # *) optarg= ;;
    # esac

    # case $option in
        # (-a|--all)
            # echo "all"
            # echo $option
            # echo $optarg
            # ;;
        # (-p|--packages)
            # echo $option
            # echo $optarg
            # echo "packages"
            # ;;
        # (-s|--standard-packages)
            # echo $option
            # echo $optarg
            # echo "standard-packages"
            # ;;
        # (--no-ve)
            # echo $option
            # echo $optarg
            # echo "no-ve"
            # ;;
        # (--allow-testcode)
            # echo $option
            # echo $optarg
            # echo "allow-testcode"
            # ;;
        # (-h|--help)
            # echo $option
            # echo $optarg
            # echo "help"
            # usage
            # exit 0
            # ;;
        # (-v|--version)
            # echo $option
            # echo $optarg
            # echo "version"
            # exit 0
            # ;;
        # (*)
            # echo $option
            # echo $optarg
            # echo "***"
            # usage
            # exit 1
            # ;;
    # esac
    # shift
# done

main() {
  if [ $# -lt 1 ]; then
    usage
    exit 1
  fi

  SUBCOMMAND="$1"; shift

  if [ ! -e "$VETAGS_DIR/$SUBCOMMAND" ]; then
    usage
    exit 1
  fi


  # run command
  PATH=$VETAGS_DIR/$SUBCOMMAND:$PATH
  COMMAND=$VETAGS_DIR/$SUBCOMMAND/createtags-$SUBCOMMAND

  # SUBACTION="default"
  # if [ "$1" != "" ] && ! echo "$1" | grep -q "^-"; then
    # SUBACTION="$1"; shift
  # fi
  # if ! type "cmd_$SUBACTION" >/dev/null 2>&1; then
    # warn "Unknown subcommand: '$SUBACTION'"
    # usage
    # exit 1
  # fi

  # run the specified action
  $COMMAND "$@"
}

main "$@"

exit 0

